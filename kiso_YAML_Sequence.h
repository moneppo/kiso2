/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class kiso_YAML_Sequence */

#ifndef _Included_kiso_YAML_Sequence
#define _Included_kiso_YAML_Sequence
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     kiso_YAML_Sequence
 * Method:    initialize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_initialize
  (JNIEnv *, jobject);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    getString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_kiso_YAML_Sequence_getString
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    getBoolean
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_kiso_YAML_Sequence_getBoolean
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    getNumber
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_kiso_YAML_Sequence_getNumber
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    getSequence
 * Signature: (I)Lkiso/YAML/Sequence;
 */
JNIEXPORT jobject JNICALL Java_kiso_YAML_Sequence_getSequence
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    getMap
 * Signature: (I)Lkiso/YAML/Map;
 */
JNIEXPORT jobject JNICALL Java_kiso_YAML_Sequence_getMap
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    type
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_kiso_YAML_Sequence_type
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    length
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_kiso_YAML_Sequence_length
  (JNIEnv *, jobject);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    remove
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_remove
  (JNIEnv *, jobject, jint);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    setString
 * Signature: (ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_setString
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    setBoolean
 * Signature: (IZ)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_setBoolean
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    setNumber
 * Signature: (ID)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_setNumber
  (JNIEnv *, jobject, jint, jdouble);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    setSequence
 * Signature: (ILkiso/YAML/Sequence;)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_setSequence
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     kiso_YAML_Sequence
 * Method:    setMap
 * Signature: (ILkiso/YAML/Map;)V
 */
JNIEXPORT void JNICALL Java_kiso_YAML_Sequence_setMap
  (JNIEnv *, jobject, jint, jobject);

#ifdef __cplusplus
}
#endif
#endif
